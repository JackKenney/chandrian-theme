[
    //operators
    {
        "scope": [
            "keyword.other.variable.definition", //$ in powershell
            "meta.class meta.method meta.var storage.type", //var, const etc
            "storage.type",
            // "meta.class storage.modifier",
            "keyword.control.class", //ruby class keyword
            "keyword.control.module", //ruby module keyworld
        ],
        "settings": {
            "foreground": "{{keywordGray}}"
        }
    },
    {
        "scope": [
            "keyword.operator.assignment",
        ],
        "settings": {
            "foreground": "{{keywordGray}}"
        }
    },

    //functions
    {
        "scope": [
            "keyword.other.special-method", //private_class_method in rb
            "meta.definition.method",
            // "meta.class meta.method.declaration storage.type", //constructor. FIXME: Also matches fns within class methods
            "storage.type.function.arrow",
            "entity.name.function" //function definition
        ],
        "settings": {
            "foreground": "{{mainAlt}}"
        }
    },
    {
        "scope": [
            "punctuation.definition.parameters",
        ],
        "settings": {
            "foreground": "{{mainAlt}}BF"
        }
    },
    {
        "scope": [
            "support.function", //.keys, .forEach, require
            "meta.function-call",
            "entity.name.function.invocation",
            "meta.function-call entity.name.function",
            "meta.method-call entity.name.function",
            "variable.function" //function invocation
        ],
        "settings": {
            "foreground": "{{main}}"
        }
    },
    {
        "scope": [
            "meta.var.expr meta.brace.round",
            "punctuation.definition.arguments"
        ],
        "settings": {
            "foreground": "{{main}}BF"
        }
    },
    {
        "scope": [
            "support.class",
            "support.constant",
            "support.class.builtin",// Math.Infinity
            "support.function.builtin",
            "support.function.node",
            "constant.language"
        ],
        "settings": {
            "foreground": "{{alt3}}"
        }
    },
    {
        "scope": [
            "meta.function-call.arguments",
            "variable.parameter.function"
        ],
        "settings": {
            "foreground": "{{mainLightest}}"
        }
    },
    {
        "name": "Decorators",
        "scope": [
            "punctuation.decorator", //@
            "meta.decorator meta.function-call entity.name.function",
            "meta.decorator variable"
        ],
        "settings": {
            "foreground": "{{alt1}}BF"
        }
    },
    {
        "scope": [
            "entity.name.type.interface",
            "entity.name.class",
            "new.expr", //new Foo
            "entity.name.type.class",
            "variable.other.class",
            "entity.other.inherited-class",
            "meta.interface"
        ],
        "settings": {
            "foreground": "{{alt3}}"
        }
    },
    {
        "scope": [
            "variable.other.property.static"

        ],
        "settings": {
            "foreground": "{{alt3}}BF"
        }
    },
    {
        "scope": [
            "support.type",
            "punctuation.separator.annotation", //-> in python
            // "entity.name.type",
            "meta.type.parameters",
            "meta.type.annotation"
        ],
        "settings": {
            "foreground": "{{alt5}}"
        }
    },
    {
        "scope": [
            "punctuation.definition.typeparameters"
        ],
        "settings": {
            "foreground": "{{alt5Supplementary}}"
        }
    },
    {
        "scope": [
            "constant.other.symbol",
            "storage.modifier"
        ],
        "settings": {
            "foreground": "{{alt4}}"
            , "fontStyle": "italic"
        }
    },
    //Object
    {
        "scope": [
            "variable.other.property",
            "meta.property.object"
        ],
        "settings": {
            "foreground": "{{text}}"
            // "fontStyle": "italic"
        }
    },
    {
        "scope": [
            "variable.other.object" //this.object
        ],
        "settings": {
            "foreground": "{{text}}"
            // "fontStyle": "italic"
        }
    },
    // { //FIXME: Can't reliably target object literal {} vs block {}
    //     "scope": [
    //         "meta.var meta.block meta.objectliteral punctuation.definition.block" // {} for literals but not block curlies
    //         // "meta.var meta.objectliteral punctuation.definition.block"
    //     ],
    //     "settings": {©∫
    //         "foreground": "{{text}}"
    //         // "fontStyle": "italic"
    //     }
    // },
    {
        "scope": [
            "meta.object-literal.key"
        ],
        "settings": {
            "foreground": "{{mainVariant}}"
        }
    },
    {
        "scope": [
            "string.unquoted.label"
        ],
        "settings": {
            "foreground": "{{mainAlt}}"
        }
    },

    //keywords
    {
        "scope": [
            "keyword.operator", //instanceof
            "keyword.operator.accessor", //.
            "keyword.operator.logical",
            "variable.language.prototype.js",
            "keyword.operator.comparison"
        ],
        "settings": {
            "foreground": "{{alt1}}BF"
        }
    },
    {
        "scope": [
            "keyword",
            "keyword.control",
            "keyword.operator.ternary"

        ],
        "settings": {
            "foreground": "{{alt1}}"
            // , "fontStyle": "italic"
        }
    },
    {
        "scope": [
            "keyword.control.conditional",
            "keyword.control.switch"
        ],
        "settings": {
            // "fontStyle": "italic"
        }
    },
    {
        "scope": [
            "keyword.control.flow",
            "keyword.control.trycatch",
            "keyword.control.pseudo-method", //ruby yields
            "variable.function meta.function-call"
        ],
        "settings": {
            "foreground": "{{alt1Complentary}}"
        }
    }, 
    {
        "scope": [
            "keyword.other.debugger"
        ],
        "settings": {
            "foreground": "{{important}}"
        }
    }, 
    {
        "scope": [
            "keyword.operator.module",
            "keyword.control.from",
            "keyword.control.import", //keyword.control.import.tsx,
            "keyword.control.export",
            "support.type.object.module"
        ],
        "settings": {
            "foreground": "{{alt4}}"
            // , "fontStyle": "italic"
        }
    },
    {
        "scope": [
            "support.class.console",
            "support.function.console",
            "support.type.object.console"
        ],
        "settings": {
            "foreground": "{{mainVariant}}"
        }
    },
    {
        "scope": "support.class.error",
        "settings": {
            // "foreground": ""
        }
    },
    {
        "scope": [
            "keyword.operator.new",
            "keyword.other.new"
        ],
        "settings": {
            "foreground": "{{alt3}}7F"
        }
    },

    //variables
    {
        "scope": [
            "meta.function-call.without-arguments",
            "meta.function-call.method.without-arguments"
            , "meta.brace.round"
        ],
        "settings": {
            "foreground": "{{mainLightest}}b4"
        }
    },
    {
        "scope": [
            "meta.brace.square",
            "punctuation.separator.arguments",
        ],
        "settings": {
            "foreground": "{{text}}"
        }
    },
    {
        "scope": [
            "variable"
        ],
        "settings": {
            "foreground": "{{text}}"
        }
    },
    {
        "scope": [
            "variable.parameter",
            "meta.definition.variable variable",
            "variable.other.readwrite.class",
            "variable.other.readwrite.instance",
            "variable.other.constant"
        ],
        "settings": {
            "foreground": "{{textProminent}}"
        }
    },
    {
        "scope": [
            "variable.language.super"
        ],
        "settings": {
            "foreground": "{{alt3}}"
        }
    }, 
    {
        "scope": [
            "variable.language.this"
        ],
        "settings": {
            "color": "{{text}}",
            "fontStyle": "italic"
        }
    }
]
